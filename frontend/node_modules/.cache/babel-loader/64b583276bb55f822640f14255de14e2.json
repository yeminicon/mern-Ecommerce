{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TechPower\\\\Documents\\\\Completed Project\\\\mern-amazona\\\\frontend\\\\src\\\\Store.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Store = /*#__PURE__*/createContext();\nconst initialState = {\n  userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null,\n  cart: {\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\n  }\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CART_ADD_ITEM':\n      // add to cart\n      const newItem = action.payload;\n      const existItem = state.cart.cartItems.find(item => item._id === newItem._id);\n      const cartItems = existItem ? state.cart.cartItems.map(item => item._id === existItem._id ? newItem : item) : [...state.cart.cartItems, newItem];\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n      return { ...state,\n        cart: { ...state.cart,\n          cartItems\n        }\n      };\n\n    case 'CART_REMOVE_ITEM':\n      {\n        const cartItems = state.cart.cartItems.filter(item => item._id !== action.payload._id);\n        localStorage.setItem('cartItems', JSON.stringify(cartItems));\n        return { ...state,\n          cart: { ...state.cart,\n            cartItems\n          }\n        };\n      }\n\n    case 'USER_SIGNIN':\n      return { ...state,\n        userInfo: action.payload\n      };\n\n    case 'USER_SIGNOUT':\n      return { ...state,\n        userInfo: null,\n        cart: {\n          cartItems: [],\n          shippingAddress: {}\n        }\n      };\n\n    case 'SAVE_SHIPPING_ADDRESS':\n      return { ...state,\n        cart: { ...state.cart,\n          shippingAddress: action.payload\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = {\n    state,\n    dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(Store.Provider, {\n    value: value,\n    children: [props.children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n}\n\n_s(StoreProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = StoreProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreProvider\");","map":{"version":3,"sources":["C:/Users/TechPower/Documents/Completed Project/mern-amazona/frontend/src/Store.js"],"names":["createContext","useReducer","Store","initialState","userInfo","localStorage","getItem","JSON","parse","cart","shippingAddress","cartItems","reducer","state","action","type","newItem","payload","existItem","find","item","_id","map","setItem","stringify","filter","StoreProvider","props","dispatch","value","children"],"mappings":"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","sourcesContent":["import { createContext, useReducer } from 'react';\n\nexport const Store = createContext();\n\nconst initialState = {\n  userInfo: localStorage.getItem('userInfo')\n    ? JSON.parse(localStorage.getItem('userInfo'))\n    : null,\n\n  cart: {\n    shippingAddress: localStorage.getItem('shippingAddress')\n      ? JSON.parse(localStorage.getItem('shippingAddress'))\n      : {},\n    cartItems: localStorage.getItem('cartItems')\n      ? JSON.parse(localStorage.getItem('cartItems'))\n      : [],\n  },\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CART_ADD_ITEM':\n      // add to cart\n      const newItem = action.payload;\n      const existItem = state.cart.cartItems.find(\n        (item) => item._id === newItem._id\n      );\n      const cartItems = existItem\n        ? state.cart.cartItems.map((item) =>\n            item._id === existItem._id ? newItem : item\n          )\n        : [...state.cart.cartItems, newItem];\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n      return { ...state, cart: { ...state.cart, cartItems } };\n    case 'CART_REMOVE_ITEM': {\n      const cartItems = state.cart.cartItems.filter(\n        (item) => item._id !== action.payload._id\n      );\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n      return { ...state, cart: { ...state.cart, cartItems } };\n    }\n    case 'USER_SIGNIN':\n      return { ...state, userInfo: action.payload };\n    case 'USER_SIGNOUT':\n      return {\n        ...state,\n        userInfo: null,\n        cart: {\n          cartItems: [],\n          shippingAddress: {},\n        },\n      };\n    case 'SAVE_SHIPPING_ADDRESS':\n      return {\n        ...state,\n        cart: {\n          ...state.cart,\n          shippingAddress: action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = { state, dispatch };\n  return <Store.Provider value={value}>{props.children} </Store.Provider>;\n}\n"]},"metadata":{},"sourceType":"module"}