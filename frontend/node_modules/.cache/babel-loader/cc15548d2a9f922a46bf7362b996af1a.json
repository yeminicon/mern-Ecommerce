{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\TechPower\\\\Documents\\\\Completed Project\\\\mern-amazona\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _asyncToGenerator from\"C:\\\\Users\\\\TechPower\\\\Documents\\\\Completed Project\\\\mern-amazona\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\TechPower\\\\Documents\\\\Completed Project\\\\mern-amazona\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import Card from'react-bootstrap/Card';import Button from'react-bootstrap/Button';import{Link}from'react-router-dom';import Rating from'./Rating';import axios from'axios';import{useContext}from'react';import{Store}from'../Store';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Product(props){var product=props.product;var _useContext=useContext(Store),state=_useContext.state,ctxDispatch=_useContext.dispatch;var cartItems=state.cart.cartItems;var addToCartHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(item){var existItem,quantity,_yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:existItem=cartItems.find(function(x){return x._id===product._id;});quantity=existItem?existItem.quantity+1:1;_context.next=4;return axios.get(\"/api/products/\".concat(item._id));case 4:_yield$axios$get=_context.sent;data=_yield$axios$get.data;if(!(data.countInStock<quantity)){_context.next=9;break;}window.alert('Sorry. Product is out of stock');return _context.abrupt(\"return\");case 9:ctxDispatch({type:'CART_ADD_ITEM',payload:_objectSpread(_objectSpread({},item),{},{quantity:quantity})});case 10:case\"end\":return _context.stop();}}},_callee);}));return function addToCartHandler(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Link,{to:\"/product/\".concat(product.slug),children:/*#__PURE__*/_jsx(\"img\",{src:product.image,className:\"card-img-top\",alt:product.name})}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Link,{to:\"/product/\".concat(product.slug),children:/*#__PURE__*/_jsx(Card.Title,{children:product.name})}),/*#__PURE__*/_jsx(Rating,{rating:product.rating,numReviews:product.numReviews}),/*#__PURE__*/_jsxs(Card.Text,{children:[\"$\",product.price]}),product.countInStock===0?/*#__PURE__*/_jsx(Button,{variant:\"light\",disabled:true,children:\"Out of stock\"}):/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return addToCartHandler(product);},children:\"Add to cart\"})]})]});}export default Product;","map":{"version":3,"sources":["C:/Users/TechPower/Documents/Completed Project/mern-amazona/frontend/src/components/Product.js"],"names":["Card","Button","Link","Rating","axios","useContext","Store","Product","props","product","state","ctxDispatch","dispatch","cartItems","cart","addToCartHandler","item","existItem","find","x","_id","quantity","get","data","countInStock","window","alert","type","payload","slug","image","name","rating","numReviews","price"],"mappings":"mfAAA,MAAOA,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,OAA3B,CACA,OAASC,KAAT,KAAsB,UAAtB,C,wFAEA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACtB,GAAQC,CAAAA,OAAR,CAAoBD,KAApB,CAAQC,OAAR,CAEA,gBAAyCJ,UAAU,CAACC,KAAD,CAAnD,CAAQI,KAAR,aAAQA,KAAR,CAAyBC,WAAzB,aAAeC,QAAf,CACA,GACUC,CAAAA,SADV,CAEIH,KAFJ,CACEI,IADF,CACUD,SADV,CAIA,GAAME,CAAAA,gBAAgB,0FAAG,iBAAOC,IAAP,+JACjBC,SADiB,CACLJ,SAAS,CAACK,IAAV,CAAe,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,GAAF,GAAUX,OAAO,CAACW,GAAzB,EAAf,CADK,CAEjBC,QAFiB,CAENJ,SAAS,CAAGA,SAAS,CAACI,QAAV,CAAqB,CAAxB,CAA4B,CAF/B,uBAGAjB,CAAAA,KAAK,CAACkB,GAAN,yBAA2BN,IAAI,CAACI,GAAhC,EAHA,uCAGfG,IAHe,kBAGfA,IAHe,MAInBA,IAAI,CAACC,YAAL,CAAoBH,QAJD,0BAKrBI,MAAM,CAACC,KAAP,CAAa,gCAAb,EALqB,wCAQvBf,WAAW,CAAC,CACVgB,IAAI,CAAE,eADI,CAEVC,OAAO,gCAAOZ,IAAP,MAAaK,QAAQ,CAARA,QAAb,EAFG,CAAD,CAAX,CARuB,uDAAH,kBAAhBN,CAAAA,gBAAgB,4CAAtB,CAcA,mBACE,MAAC,IAAD,yBACE,KAAC,IAAD,EAAM,EAAE,oBAAcN,OAAO,CAACoB,IAAtB,CAAR,uBACE,YAAK,GAAG,CAAEpB,OAAO,CAACqB,KAAlB,CAAyB,SAAS,CAAC,cAAnC,CAAkD,GAAG,CAAErB,OAAO,CAACsB,IAA/D,EADF,EADF,cAIE,MAAC,IAAD,CAAM,IAAN,yBACE,KAAC,IAAD,EAAM,EAAE,oBAActB,OAAO,CAACoB,IAAtB,CAAR,uBACE,KAAC,IAAD,CAAM,KAAN,WAAapB,OAAO,CAACsB,IAArB,EADF,EADF,cAIE,KAAC,MAAD,EAAQ,MAAM,CAAEtB,OAAO,CAACuB,MAAxB,CAAgC,UAAU,CAAEvB,OAAO,CAACwB,UAApD,EAJF,cAKE,MAAC,IAAD,CAAM,IAAN,gBAAaxB,OAAO,CAACyB,KAArB,GALF,CAMGzB,OAAO,CAACe,YAAR,GAAyB,CAAzB,cACC,KAAC,MAAD,EAAQ,OAAO,CAAC,OAAhB,CAAwB,QAAQ,KAAhC,0BADD,cAKC,KAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMT,CAAAA,gBAAgB,CAACN,OAAD,CAAtB,EAAjB,yBAXJ,GAJF,GADF,CAqBD,CACD,cAAeF,CAAAA,OAAf","sourcesContent":["import Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport Rating from './Rating';\nimport axios from 'axios';\nimport { useContext } from 'react';\nimport { Store } from '../Store';\n\nfunction Product(props) {\n  const { product } = props;\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const {\n    cart: { cartItems },\n  } = state;\n\n  const addToCartHandler = async (item) => {\n    const existItem = cartItems.find((x) => x._id === product._id);\n    const quantity = existItem ? existItem.quantity + 1 : 1;\n    const { data } = await axios.get(`/api/products/${item._id}`);\n    if (data.countInStock < quantity) {\n      window.alert('Sorry. Product is out of stock');\n      return;\n    }\n    ctxDispatch({\n      type: 'CART_ADD_ITEM',\n      payload: { ...item, quantity },\n    });\n  };\n\n  return (\n    <Card>\n      <Link to={`/product/${product.slug}`}>\n        <img src={product.image} className=\"card-img-top\" alt={product.name} />\n      </Link>\n      <Card.Body>\n        <Link to={`/product/${product.slug}`}>\n          <Card.Title>{product.name}</Card.Title>\n        </Link>\n        <Rating rating={product.rating} numReviews={product.numReviews} />\n        <Card.Text>${product.price}</Card.Text>\n        {product.countInStock === 0 ? (\n          <Button variant=\"light\" disabled>\n            Out of stock\n          </Button>\n        ) : (\n          <Button onClick={() => addToCartHandler(product)}>Add to cart</Button>\n        )}\n      </Card.Body>\n    </Card>\n  );\n}\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}